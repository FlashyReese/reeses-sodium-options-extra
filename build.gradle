plugins {
    id 'fabric-loom' version '0.12-SNAPSHOT'
    id 'maven-publish'
}

version = project.mod_version
group = project.maven_group

repositories {
    // Add repositories to retrieve artifacts from in here.
    // You should only use this when depending on other mods because
    // Loom adds the essential maven repositories to download Minecraft and libraries from automatically.
    // See https://docs.gradle.org/current/userguide/declaring_repositories.html
    // for more information about repositories.
    maven {
        name = "Modrinth"
        url = "https://api.modrinth.com/maven"
        content {
            includeGroup "maven.modrinth"
        }
    }
    maven {
        url "https://maven.flashyreese.me/releases"
    }
    maven {
        url "https://maven.flashyreese.me/snapshots"
    }
    maven {
        url "https://storage.googleapis.com/devan-maven/"
    }
    maven {
        name 'Gegy'
        url 'https://maven.gegy.dev'
    }
}

dependencies {
    // To change the versions see the gradle.properties file
    minecraft "com.mojang:minecraft:${project.minecraft_version}"
    mappings "net.fabricmc:yarn:${project.yarn_mappings}:v2"
    modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"

    // Fabric API. This is technically optional, but you probably want it anyway.
    modImplementation "net.fabricmc.fabric-api:fabric-api:${project.fabric_version}"

    modImplementation("me.flashyreese.mods:reeses-sodium-options:${project.reeses_sodium_options}") {
        exclude group: "net.coderbot.iris_mc1_19", module: "iris"
        exclude group: "net.fabricmc.fabric-api",  module: "fabric-api"
    }
    // Currently using altrisi/CaffeineConfig until it is officially available through CaffeineMC's maven repository
    // Todo: Use https://github.com/CaffeineMC/mixin-config when available
    include(modImplementation("net.caffeinemc:mixin-config:1.0.0+1.17"))

    modImplementation "maven.modrinth:animatica:0.5+1.19"
    modImplementation "maven.modrinth:borderless-mining:1.1.5+1.19"
    modImplementation "maven.modrinth:cit-resewn:1.1.1+1.19"
    modImplementation "maven.modrinth:colormatic:3.1.2"
    modImplementation "maven.modrinth:continuity:2.0.0+1.19"

    modImplementation "maven.modrinth:dynamic-fps:2.2.0"
    modImplementation "com.moandjiezana.toml:toml4j:0.7.2"

    modImplementation "maven.modrinth:ebe:0.7.1+1.19"
    modImplementation "net.devtech:arrp:0.6.2"

    modImplementation "maven.modrinth:lambdabettergrass:1.3.0+1.19"
    modImplementation "maven.modrinth:lambdynamiclights:2.1.2+1.19"
    modImplementation "dev.lambdaurora:spruceui:4.0.0+1.19"
}

processResources {
    inputs.property "version", project.version
    filteringCharset "UTF-8"

    filesMatching("fabric.mod.json") {
        expand "version": project.version
    }
}

def targetJavaVersion = 17
tasks.withType(JavaCompile).configureEach {
    // ensure that the encoding is set to UTF-8, no matter what the system default is
    // this fixes some edge cases with special characters not displaying correctly
    // see http://yodaconditions.net/blog/fix-for-java-file-encoding-problems-with-gradle.html
    // If Javadoc is generated, this must be specified in that task too.
    it.options.encoding = "UTF-8"
    if (targetJavaVersion >= 10 || JavaVersion.current().isJava10Compatible()) {
        it.options.release = targetJavaVersion
    }
}

java {
    def javaVersion = JavaVersion.toVersion(targetJavaVersion)
    if (JavaVersion.current() < javaVersion) {
        toolchain.languageVersion = JavaLanguageVersion.of(targetJavaVersion)
    }
    archivesBaseName = project.archives_base_name
    // Loom will automatically attach sourcesJar to a RemapSourcesJar task and to the "build" task
    // if it is present.
    // If you remove this line, sources will not be generated.
    withSourcesJar()
}

jar {
    from("LICENSE") {
        rename { "${it}_${project.archivesBaseName}" }
    }
}

// configure the maven publication
publishing {
    publications {
        mavenJava(MavenPublication) {
            from components.java
        }
    }

    // See https://docs.gradle.org/current/userguide/publishing_maven.html for information on how to set up publishing.
    repositories {
        // Add repositories to publish to here.
        // Notice: This block does NOT have the same function as the block in the top level.
        // The repositories here will be used for publishing your artifact, not for
        // retrieving dependencies.
    }
}
